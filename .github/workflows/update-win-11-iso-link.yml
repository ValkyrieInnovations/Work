name: Get Windows 11 Download Link

permissions:
  contents: write

on:
  schedule:
    - cron: '0 */20 * * *'  # Run every 20 hours
  workflow_dispatch:     # Allow manual trigger

jobs:
  get-windows11-link:
    runs-on: windows-latest  # Using Windows runner for better PowerShell support
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download Fido Script
        run: |
          # Create directory for scripts
          New-Item -Path "scripts" -ItemType Directory -Force
          
          # Download Fido.ps1 from the official repository
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/pbatard/Fido/master/Fido.ps1" -OutFile "scripts\Fido.ps1"
          
          # Verify the script was downloaded
          if (Test-Path "scripts\Fido.ps1") {
            Write-Host "Fido script downloaded successfully"
          } else {
            Write-Error "Failed to download Fido script"
            exit 1
          }
      
      - name: Get Windows 11 Download Link
        id: get_link
        run: |
          # Change to scripts directory
          Set-Location scripts
          
          # Run Fido script to get Windows 11 download link
          # -Win 11 specifies Windows 11
          # -Rel "Latest" gets the latest release
          # -Lang "English" for English language
          # -Ed "Pro" for Windows 11 Pro edition
          # -GetUrl to only get the URL without downloading
          $downloadUrl = (& .\Fido.ps1 -Win 11 -Rel "Latest" -Lang "English" -Ed "Pro" -GetUrl)
          
          # Output the result for debugging
          Write-Host "Download URL: $downloadUrl"
          
          # Save the URL to a file
          $downloadUrl | Out-File -FilePath "windows11_download_link.txt" -Force
          
          # Set output variable for use in subsequent steps
          "download_link=$downloadUrl" >> $env:GITHUB_OUTPUT
      
      - name: Update repository with download link
        run: |
          if (Test-Path "scripts\windows11_download_link.txt") {
            $downloadLink = Get-Content "scripts\windows11_download_link.txt"
            
            if ($downloadLink -like "http*") {
              Write-Host "Successfully retrieved Windows 11 download link: $downloadLink"
              
              # Copy the link file to the repository root
              Copy-Item "scripts\windows11_download_link.txt" -Destination "windows11_download_link.txt" -Force
              
              # Configure Git
              git config --global user.name "GitHub Actions Bot"
              git config --global user.email "actions@github.com"
              
              # Add, commit and push changes
              git add windows11_download_link.txt
              git commit -m "Update Windows 11 download link" -m "Automated update via GitHub Actions"
              git push
            } else {
              Write-Host "Error: Retrieved link does not appear to be valid: $downloadLink"
              exit 1
            }
          } else {
            Write-Host "Error: windows11_download_link.txt file not found"
            exit 1
          }
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows11-Download-Link
          path: scripts/windows11_download_link.txt
          if-no-files-found: warn
